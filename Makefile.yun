SHELL = /bin/bash

TECHNO=openwrt

COMMON=common
EXECUTABLE=mea-relaysbox-$(TECHNO)

ARDUINOSKETCH=HFavecComio2.hex
ARDUINOSKETCHDIR=Arduino/HFavecComio2
RELAYCONTROLERSKETCH=relaycontroler.hex
RELAYCONTROLERSKETCHDIR=Arduino/relaycontroler
HFBUTTONSSKETCH=hfbuttons.hex
HFBUTTONSSKETCHDIR=Arduino/hfbuttons

XPLLIB=$(TECHNO)_xPL.a
XPLLIBDIR=libraries/xPLLib

YUNHOST = 192.168.0.253
YUNUSER = root
YUNDIR = .
# voir :
# http://wiki.openwrt.org/doku.php?id=oldwiki:dropbearpublickeyauthenticationhowto
# pour la mise en place des cles ssh


CC = $(STAGING_DIR)/toolchain-mips_r2_gcc-4.6-linaro_uClibc-0.9.33.2/bin/mips-openwrt-linux-gcc 

all:
	cd $(XPLLIBDIR) ; make TECHNO=$(TECHNO)
	cd $(XPLLIBDIR)/examples ; make TECHNO=$(TECHNO)
	cd $(COMMON) ; make EXECUTABLE=$(EXECUTABLE) TECHNO=$(TECHNO) CC=$(CC)
	cd $(ARDUINOSKETCHDIR) ; make BOARD=yun HARDWARE=arduino
	cd $(RELAYCONTROLERSKETCHDIR) ; make BOARD=attiny84at1 HARDWARE=tiny
	cd $(HFBUTTONSSKETCHDIR) ; make BOARD=attiny85at8 HARDWARE=tiny


clean: cleancommon cleanxpllib cleanarduino cleanrelaycontroler cleanhfbuttons

cleanxpllib:
	cd $(XPLLIBDIR) ; make TECHNO=$(TECHNO) clean
	cd $(XPLLIBDIR)/examples ; make TECHNO=$(TECHNO) clean
	 
cleancommon:
	rm -f $(YUNINSTALLFLAG)
	cd $(COMMON) ; make TECHNO=$(TECHNO) EXECUTABLE=$(EXECUTABLE) clean

cleanarduino:
	cd $(ARDUINOSKETCHDIR) ; make clean

cleanrelaycontroler:
	cd $(RELAYCONTROLERSKETCHDIR) ; make clean

cleanhfbuttons:
	cd $(HFBUTTONSSKETCHDIR) ; make clean


installserver: all
	scp $(TECHNO)/$(EXECUTABLE) $(YUNUSER)@$(YUNHOST):$(YUNDIR)

installsketch: all
	scp $(ARDUINOSKETCH) $(YUNUSER)@$(YUNHOST):$(YUNDIR) ; ssh $(YUNUSER)@$(YUNHOST) run-avrdude $(ARDUINOSKETCH)

execserver:
	ssh $(YUNUSER)@$(YUNHOST) $(YUNDIR)/$(EXECUTABLE)


getfromgit: clean
	git pull

buildfromgit: getfromgit all
